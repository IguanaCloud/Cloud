{
  "openapi": "3.0.3",
  "info": {
    "title": "MongoDB Flask App - OpenAPI 3.0",
    "description": "",
    "version": "1.0.1"
  },
  "externalDocs": {
    "description": "Github Repository",
    "url": "https://github.com/CapybaraDevOps/flask-repo"
  },
  "tags": [
    {
      "name": "Index",
      "description": "Index route endpoints"
    },
    {
      "name": "User",
      "description": "User route endpoints"
    },
    {
      "name": "Client",
      "description": "Client route endpoints"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Gets index page",
        "operationId": "getIndexPage",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "302": {
            "description": "Successful operation with redirect to /client/dashboard"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/login/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets user login page",
        "operationId": "getUserLoginPage",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Adds client's data to the database",
        "description": "Add client's data to the database",
        "operationId": "postUserLogin",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "default": "TestUser"
                  },
                  "password": {
                    "type": "string",
                    "default": "TestPass"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Invalid login credentials"
          }
        }
      }
    },
    "/user/registry/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets user register page",
        "operationId": "getUserRegisterPage",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/dashboard/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets user dashboard page",
        "operationId": "getUserDashboardPage",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "302": {
            "description": "Redirected"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/dashboard/admin/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets admin dashboard page",
        "operationId": "getAdminDashboardPage",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "302": {
            "description": "Redirected"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/signup": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Adds new user to the database",
        "description": "Add new user to the database",
        "operationId": "postAddUser",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "default": "TestName"
                  },
                  "email": {
                    "type": "string",
                    "default": "TestEmail@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "default": "TestPass"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/signout": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Sign out current user",
        "operationId": "getUserSignout",
        "responses": {
          "302": {
            "description": "Successful operation. Redirect to index"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/admin/delete/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Deletes the client from the database",
        "description": "Delete the client from the database",
        "operationId": "adminDeleteClient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ObjectId of the client that needs to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "302": {
            "description": "Successful operation with redirect"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/user/admin/delete_all": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Deletes all clients from the database",
        "operationId": "deleteAllClients",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "302": {
            "description": "Successful operation with redirect"
          },
          "400": {
            "description": "Invalid status value"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/client/dashboard/": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Gets client dashboard page",
        "operationId": "getClientDashboardPage",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "302": {
            "description": "Redirected"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/client/updatedata/": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Gets Updata data page",
        "operationId": "getUpdateDataPage",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "302": {
            "description": "Redirected"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/client/decline/dashboard/": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Gets Declined page",
        "operationId": "getDeclinedPage",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "302": {
            "description": "Redirected"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/client/decline/": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Declines the data process request",
        "operationId": "declineRequest",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/client/accept/": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Accepts the data process request",
        "operationId": "acceptRequest",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/client/delete/{id}/": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Deletes the client from the database",
        "description": "Delete the client from the database",
        "operationId": "deleteClient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ObjectId of the client that needs to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "302": {
            "description": "Successful operation with redirect"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/client/updata": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Updates client data",
        "description": "Update client data",
        "operationId": "updateClientData",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "data"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "default": "TestName"
                  },
                  "data": {
                    "type": "string",
                    "default": "UpdatedData"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "302": {
            "description": "Successful operation with redirect"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/client/change_policy": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Changes clients choice to accepted",
        "operationId": "changePolicy",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "<Insert your value here or drop this parameter from request>"
          },
          "name": {
            "type": "string",
            "example": "ExampleUser"
          },
          "email": {
            "type": "string",
            "example": "example@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "1232453532Abcd"
          },
          "administrator": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "<Insert your value here or drop this parameter from request>"
          },
          "ip": {
            "type": "string",
            "example": "127.0.0.1"
          },
          "status": {
            "type": "string",
            "example": "accepted"
          },
          "ip_hash": {
            "type": "string",
            "example": "12ca17b49af2289436f303e0166030a21e525d266e209267433801a8fd4071a0"
          },
          "data": {
            "type": "string",
            "example": "test"
          }
        }
      }
    },
    "requestBodies": {
      "Client": {
        "description": "Client object that needs to be added to the database",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Client"
            }
          }
        }
      },
      "User": {
        "description": "User object that needs to be added to the database",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      }
    }
  }
}